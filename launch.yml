
- hosts: localhost

- name: create ec2 instance
  hosts: localhost
  gather_facts: False
  vars:
    group_id: sg-group_id
    instance_type: t2.micro
    image: ami-image_id
    wait: yes
    count: 1
    vpc_subnet_id: subnet-vpc_id
    assign_public_ip: yes
    region: region
    keypair: nameOfKey

  tasks:
    - name: launch instances
      amazon.aws.ec2:
        key_name: "{{ keypair }}"
        group_id: "{{ group_id }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: "{{ wait }}"
        region: "{{ region }}"
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        assign_public_ip: "{{ assign_public_ip }}"
        count: "{{ count }}"
      register: ec2

    - name: add instances in groupnames
      add_host:
        hostname: "{{ item.public_dns_name }}"
        groupname: launched
      loop: "{{ ec2.instances }}"

    - name: waitting ssh connection
      delegate_to: "{{ item.public_dns_name }}"
      remote_user: admin
      wait_for_connection:
        delay: 30
        timeout: 120
      with_items: "{{ ec2.instances }}"
  
- name: configure instance(s)
  hosts: launched
  become: True
  gather_facts: True
  remote_user: admin

  pre_tasks:
    
    - name: install a list of packages
      apt:
        name: "{{ packages }}"
        state: latest
        install_recommends: no
        update_cache: yes
        force_apt_get: yes
      vars:
        packages:
        - git
        - gnupg
        - gnupg2
          
  tasks:
    - name: git checkout
      git:
        repo: ssh://git@github.com:hanzou89/spring-test.git
        dest: /home/admin/spring-test
        key_file: nameOfKey
        accept_hostkey: yes
        force: yes
   
    - name: docker-compose up -d
      community.general.docker_compose:
        project_src: spring-test
    
    
      
- name: terminate instances
  hosts: localhost
  tasks:
    - name: terminate instances that were previously launched
      amazon.aws.ec2:
        state: 'absent'
        instance_ids: '{{ ec2.instance_ids }}'
        region: region